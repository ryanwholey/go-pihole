name: Test

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set cache paths
        id: go-cache-paths
        run: |
          echo "::set-output name=build::$(go env GOCACHE)"
          echo "::set-output name=mod::$(go env GOMODCACHE)"

      - name: Go cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.go-cache-paths.outputs.build }}
            ${{ steps.go-cache-paths.outputs.mod }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Test
        run: go test -race -v ./...

  acceptance:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    env:
      PIHOLE_URL: http://localhost:8080
      PIHOLE_API_TOKEN: 7b3d979ca8330a94fa7e9e1b466d8b99e0bcdea1ec90596c0dcc8d7ef6b4300c

    strategy:
      matrix:
        tag:
          - "latest"
          - "nightly"
          - "2022.02.1"
          - "2022.04.3"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Start Pi-hole
        shell: bash
        run: |-
          docker-compose -f docker-compose.yml -f <(echo '{"services": {"pihole":{"image": "pihole/pihole:${{ matrix.tag }}"}}}') up -d

      - name: Run acceptance tests
        env:
          TEST_ACC: "1"
        run: go test -v ./...
